---
- name: Configure host
  block:
    - name: Query for the host ID, there is only one as is SNO
      shell: "aicli list hosts | grep {{ cluster_name }} | cut -d '|' -f 4"
      register: host_id
      when: hostname is defined

    - name: Copy the network file remotely if it exists
      copy:
        src: "{{ network_config_path }}"
        dest: "{{ temporary_path }}/network_config"
      when: network_config_path is defined and network_config_path|length>0

    - name: Set the hostname for the given host_id
      shell: "aicli update host {{ host_id.stdout | trim }} -P name={{ hostname }}{% if network_config_path is defined and network_config_path|length > 0 %} --paramfile {{ temporary_path }}/network_config{% endif %}"
      when: host_id | length > 0
  when: hostname is defined
  environment:
    AI_URL: "{{ ai_url }}"
    AI_OFFLINETOKEN: "{{ aicli_offline_token }}"

- name: Configure cluster
  block:
    - name: Set API VIP
      command: "aicli update cluster -P machine_network_cidr={{ machine_network_cidr }} {{ cluster_name }}"
      retries: 20
      delay: 10
      register: result
      until: result.rc == 0
      when: machine_network_cidr is defined

    - name: Wait until cluster is ready to be installed
      shell: "aicli list cluster | grep {{ cluster_name }} |  cut -d '|' -f4 | tr -d ' '"
      register: cluster_ready
      until: cluster_ready.stdout == "ready"
      retries: 100
      delay: 30

    # - meta: end_play

    - name: Install cluster
      shell: "aicli start cluster {{ cluster_name }}"
  environment:
    AI_URL: "{{ ai_url }}"
    AI_OFFLINETOKEN: "{{ aicli_offline_token }}"
